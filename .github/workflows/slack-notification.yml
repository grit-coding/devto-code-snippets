name: Slack Notification Example

on:
  pull_request: 
    types:
      - opened
      - edited
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Manual trigger'
        required: true
        type: choice
        options:
          - test

env:
  SLACK_CHANNEL_ID: C08UA57JKF0
  SLACK_ENV_NAME: TEST
  SLACK_REPO_NAME: devto-code-snippets
  PIPELINE_URL: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
  PR_URL: 'https://github.com/${{ github.repository }}/pull/'

permissions:
  checks: write
  pull-requests: write
  contents: write
  actions: read

jobs:
  notify-start:
    runs-on: ubuntu-latest
    outputs:
      ts: ${{ steps.notify.outputs.ts }}
      commit_message: ${{ steps.get-message.outputs.commit_message }}
      pr_number: ${{ steps.get-message.outputs.pr_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to access full commit history

      - name: Get commit message and PR number
        id: get-message
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
            PR_NUMBER="${{ github.event.pull_request.number }}"
          else
            COMMIT_SHA="${{ github.sha }}"
            COMMIT_MESSAGE=$(git log -1 --pretty=format:%s "$COMMIT_SHA")
            PR_NUMBER=$(echo "$COMMIT_MESSAGE" | sed -n 's/.*#\([0-9]\+\).*/\1/p' || true)
          fi

          COMMIT_MESSAGE=${COMMIT_MESSAGE:-$(git log -1 --pretty=format:%s "$COMMIT_SHA")}

          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT


      - name: Check if SLACK_BOT_TOKEN is present
        run: |
            if [ -z "${{ secrets.SLACK_BOT_TOKEN }}" ]; then
            echo "SLACK_BOT_TOKEN is missing!"
            exit 1
            else
            echo "SLACK_BOT_TOKEN is set."
            fi


      - name: Notify start on Slack
        id: notify
        uses: slackapi/slack-github-action@v2.0.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            channel: ${{ env.SLACK_CHANNEL_ID }}
            username: "Slack Bot"
            icon_emoji: ":star-struck:"
            blocks:
              - type: header
                text:
                  type: plain_text
                  text: "${{ env.SLACK_ENV_NAME }} Deployment started :rocket:"
                  emoji: true
            attachments:
              - color: "#cccccc"
                fields:
                  - title: "Repo"
                    value: "${{ env.SLACK_REPO_NAME }}"
                    short: true
                  - title: "Status"
                    value: "In Progress"
                    short: true
                  - title: "Author"
                    value: "${{ github.actor }}"
                    short: true
                  - title: "Message"
                    value: "${{ steps.get-message.outputs.commit_message }}"
                    short: true
                  - title: "Pull Request"
                    value: "<${{ env.PR_URL }}${{ steps.get-message.outputs.pr_number }}|Link>"
                    short: true
                  - title: "Workflow"
                    value: "<${{ env.PIPELINE_URL }}|Link>"
                    short: true

  deploy:
    runs-on: ubuntu-latest
    needs: notify-start
    steps:
      - name: Dummy deploy (replace me)
        run: |
          echo "Pretending to deploy..."
          exit 1

  notify-end:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - notify-start
      - deploy
    steps:
      - name: Notify end on Slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.update
          payload: |
            channel: ${{ env.SLACK_CHANNEL_ID }}
            ts: "${{ needs.notify-start.outputs.ts }}"
            blocks:
              - type: header
                text:
                  type: plain_text
                  text: "${{ env.SLACK_ENV_NAME }} ${{ needs.deploy.result == 'success' && 'Deployment succeeded :white_check_mark:' || 'Deployment failed :x:' }}"
                  emoji: true
            attachments:
              - color: "${{ needs.deploy.result == 'success' && '28a745' || 'fb2c36' }}"
                fields:
                  - title: "Repo"
                    value: "${{ env.SLACK_REPO_NAME }}"
                    short: true
                  - title: "Status"
                    value: "${{ needs.deploy.result == 'success' && 'Completed' || 'Failed' }}"
                    short: true
                  - title: "Author"
                    value: "${{ github.actor }}"
                    short: true
                  - title: "Message"
                    value: "${{ needs.notify-start.outputs.commit_message }}"
                    short: true
                  - title: "Pull Request"
                    value: "<${{ env.PR_URL }}${{ needs.notify-start.outputs.pr_number }}|Link>"
                    short: true
                  - title: "Workflow"
                    value: "<${{ env.PIPELINE_URL }}|Link>"
                    short: true